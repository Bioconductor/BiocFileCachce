% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiocFileCache-class.R
\docType{methods}
\name{BiocFileCache-class}
\alias{BiocFileCache-class}
\alias{BiocFileCache}
\alias{bfcCache,BiocFileCache-method}
\alias{bfcCache}
\alias{length,BiocFileCache-method}
\alias{[[,BiocFileCache,numeric,missing-method}
\alias{[[<-,BiocFileCache,numeric,missing,character-method}
\alias{bfcnew,BiocFileCache-method}
\alias{bfcnew}
\alias{bfcadd,BiocFileCache-method}
\alias{bfcadd}
\alias{bfcinfo,BiocFileCache-method}
\alias{bfcinfo}
\alias{bfcpath,BiocFileCache-method}
\alias{bfcpath}
\alias{bfcrpath,BiocFileCache-method}
\alias{bfcrpath}
\alias{bfcupdate,BiocFileCache-method}
\alias{bfcupdate}
\alias{bfcquery,BiocFileCache-method}
\alias{bfcquery}
\alias{bfcneedsupdate,BiocFileCache-method}
\alias{bfcneedsupdate}
\alias{bfcdownload,BiocFileCache-method}
\alias{bfcdownload}
\alias{bfcremove,BiocFileCache-method}
\alias{bfcremove}
\alias{bfcsync,BiocFileCache-method}
\alias{bfcsync}
\alias{cleanCache,BiocFileCache-method}
\alias{cleanCache}
\alias{removeCache,BiocFileCache-method}
\alias{removeCache}
\alias{show,BiocFileCache-method}
\title{BiocFileCache class}
\usage{
BiocFileCache(cache = path.expand("~/.BiocFileCache"))

\S4method{bfcCache}{BiocFileCache}(x)

\S4method{length}{BiocFileCache}(x)

\S4method{[[}{BiocFileCache,numeric,missing}(x, i, j)

\S4method{[[}{BiocFileCache,numeric,missing,character}(x, i, j, ...) <- value

\S4method{bfcnew}{BiocFileCache}(x, rname)

\S4method{bfcadd}{BiocFileCache}(x, rname, fpath = NA_character_,
  rtype = c("auto", "local", "web"), action = c("copy", "move", "asis"),
  proxy = "", ...)

\S4method{bfcinfo}{BiocFileCache}(x, rids)

\S4method{bfcpath}{BiocFileCache}(x, rid)

\S4method{bfcrpath}{BiocFileCache}(x, rids)

\S4method{bfcupdate}{BiocFileCache}(x, rid, rname = NULL, rpath = NULL,
  weblink = NULL, proxy = "")

\S4method{bfcquery}{BiocFileCache}(x, queryValue)

\S4method{bfcneedsupdate}{BiocFileCache}(x, rids)

\S4method{bfcdownload}{BiocFileCache}(x, rid, proxy = "")

\S4method{bfcremove}{BiocFileCache}(x, rids)

\S4method{bfcsync}{BiocFileCache}(x, verbose = TRUE)

\S4method{cleanCache}{BiocFileCache}(x, days = 120, ask = TRUE)

\S4method{removeCache}{BiocFileCache}(x, ask = TRUE)

\S4method{show}{BiocFileCache}(object)
}
\arguments{
\item{cache}{character(1) On-disk location (directory path) of
cache.}

\item{x}{\code{BiocFileCache} instance.}

\item{i}{Rid numbers}

\item{j}{Not applicable}

\item{...}{For \code{action="copy"}, additional arguments passed to
\code{file.copy}.}

\item{value}{character(1) Replace file path}

\item{rname}{character(1) Name of object in file cache}

\item{fpath}{character(1) Path to current file location or remote
web resource}

\item{rtype}{character(1) local or web indicating if the resource is a local
file or a web resource}

\item{action}{How to handle the file: create a \code{copy} of
\code{fpath} in the cache directory; \code{move} the file to
the cache directory; or \code{asis} leave the file in current
location but save the path in the cache.}

\item{proxy}{proxy server}

\item{rids}{character() List of rids.}

\item{rid}{numeric(1) Unique resource id}

\item{rpath}{character(1) replacement value for rpath}

\item{weblink}{character(1) path to replacement web resource}

\item{queryValue}{character vector of patterns to match in resource. It will
match the pattern against rname, rpath, and weblink.}

\item{verbose}{If descriptive message and list of issues should be included
as output}

\item{days}{Number of days between accessDate and currentDate; if exceeded
entry will be deleted}

\item{ask}{check if really want to remove cache and files}

\item{object}{A \code{BiocFileCache} instance.}
}
\value{
For 'BiocFileCache': A \code{BiocFileCache} instance.

For 'bfcCache': character(1) location of the directory
containing the cache.

For 'length': integer(1) Number of objects in the file cache.

For '[[': rpath for the given resource in the cache

For '[[<-': Updated biocFileCache, invisibly

For 'bfcnew': named character(1) The path to save your object/file.
The name of the character is the unique rid for the resource

For 'bfcadd': named character(1) The path to save your object/file.
The name of the character is the unique rid for the resource.

For 'bfcinfo': A list of current resources in the database

For 'bfcpath': The file path location to load and original source
information for web resources.

For 'bfcrpath': The local file path location to load.
If no 'rids' are valid, returns NULL.

For 'bfcupdate': Returns updated biocFileCache object, invisibly

For 'bfcquery': A list of current resources in the database whose
rname, rpath, or weblink contained queryValue. If multiple values are given,
the resource must contain all of the patterns. If a resource is not found
matching all patterns listed, returns NA.

For 'bfcneedsupdate': named logical vector if resource needs to
be updated. The name is the unique 'rid' for the resource. If no 'rids'
are web resources, or no 'rids' are valid, returns NULL

For 'bfcdownload': Returns rpath to data, invisibly

For 'bfcremove': Returns updated biocFileCache object, invisibly

For 'bfcsync': logical if cache is in sync. 'verbose' is TRUE by
default, so descriptive messages will also be included

For 'cleanCache': TRUE if successfully removed.

For 'removeCache': TRUE if successfully removed.
}
\description{
This class represents the location of files stored on disk. Use the
return value to add and retrieve files that persist across
sessions.
}
\section{Methods (by generic)}{
\itemize{
\item \code{bfcCache}: Get the location of the on-disk cache.

\item \code{length}: Get the number of object in the file
cache.

\item \code{[[}: Get a file path for select resources from
the cache.

\item \code{[[<-}: Set the file path of a
select resources from the cache.

\item \code{bfcnew}: Add a resource to the database

\item \code{bfcadd}: Add an existing resource to the database

\item \code{bfcinfo}: list resources in database

\item \code{bfcpath}: display paths of resource

\item \code{bfcrpath}: display rpath of resource

\item \code{bfcupdate}: Update a resource in the cache

\item \code{bfcquery}: query resource

\item \code{bfcneedsupdate}: check if a resource needs to be updated

\item \code{bfcdownload}: Redownload resource to location in cache

\item \code{bfcremove}: Remove a resource to the database.
If the local file is located in the bcfCache,
the file will also be deleted.

\item \code{bfcsync}: sync cache and resource.

\item \code{cleanCache}: Remove old/unused files in BiocFileCache. If file
to be removed is not in the bfcCache location it will not be deleted.

\item \code{removeCache}: Completely remove the BiocFileCache

\item \code{show}: Display a \code{BiocFileCache} instance.
}}

\examples{
bfc <- BiocFileCache()            # global cache
bfc
bfcCache(bfc)
length(bfc)
bfc0 <- BiocFileCache(tempfile())         # temporary catch for examples
path <- bfcnew(bfc0, "NewResource")
path
fl1 <- tempfile(); file.create(fl1)
bfcadd(bfc0, "Test1", fl1)                 # copy
fl2 <- tempfile(); file.create(fl2)
bfcadd(bfc0, "Test2", fl2, action="move")         # move
fl3 <- tempfile(); file.create(fl3)
add3 <- bfcadd(bfc0, "Test3", fl3, action="asis")         # reference
rid3 <- as.integer(names(add3))

bfc0
file.exists(fl1)                                # TRUE
file.exists(fl2)                                # FALSE
file.exists(fl3)                                # TRUE

# add a remote resource
url <- "http://httpbin.org/get"
bfcadd(bfc0, "TestWeb", fpath=url)
bfcinfo(bfc0)
bfcpath(bfc0, rid3)
bfcrpath(bfc0, rid3)
bfcupdate(bfc0, rid3, rpath=fl3, rname="NewRname")
bfc0[[rid3]] = fl1
bfcupdate(bfc0, 5, weblink="http://google.com")
bfcquery(bfc0, "test")
bfcneedsupdate(bfc0, 5)
bfcdownload(bfc0, 5)
bfcremove(bfc0, rid3)
bfcinfo(bfc0)
bfcsync(bfc0)
bfcremove(bfc0, 1)
bfcsync(bfc0, FALSE)
\dontrun{cleanCache(bfc, ask=FALSE)}
\dontrun{removeCache(bfc, ask=FALSE)}
}
